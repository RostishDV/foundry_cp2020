// A block of information on the sheet, consisting of a label and something to edit, sometimes with more info.

/**
* A convenience class to prevent boilerplate
* Best used like so, in its basic form:
* <div class="field"><label></label><input></div>
* 
* Can include a div with a background using .field-image, and the size of the input adjusted with the classes .number, .smallnumber, or .textsize
* This specifically does not adjust margins - that's up to containers.
* Adjusting field size is best done by changing the font size and/or the childrens' padding
*/

.cyberpunk .field {
    display: flex;
    flex-direction: row;
    align-items: stretch;

    border-width: $field-border-width;
    border-style: solid;
    border-color: $text-colour;
    

    // Only apply padding to direct children. Padding isn't on field itself, as it's the children that have the background color
    // (If the field itself had the bg-color, we'd never be able to have transparent input fields)
    // IF we cease wanting transparent background, I'll happily make the background solid - it'll solve a fair few problems
    >* {
        padding: 2px 3px 2px 0px;
    }
    // If we need to wrap anything (eg selects, inactives) to get them to display properly, ensure they get styled right too
    >*, >span>*, >div>* {
        background-color: $text-colour;
        color: $text-colour-inverted;
        font-weight: bold;
        font-variant: small-caps;
        padding-left: calc(5px - #{$field-border-width});
        padding-right: 5px;

        .field, &.field-list {
            background-color: unset;
            color: $text-colour;
            padding: unset;
        }
    }

    // If we go into another field or field list, reset backgrounds
    // >.field, >.field-list {
    //     background-color: unset;
    //     padding: unset;
    // }
    // I'd have this as an img, but it turns out changing an img tag's source on rollover can't be done in CSS, sooo...
    .field-image {
        background-position: center;
        background-repeat: no-repeat;
        background-size: contain;
        max-width: 32px;
        width: 32px;
        padding: 0px 3px 0px 0px;
    }

    &:hover > .field-image.roll {
        background-image: url("../../../icons/svg/d10-grey.svg") !important;
    }

    >input {
        @include reset-input;
        background-color: unset;
        color: $text-colour;
        font-family: $font-secondary;
        padding-left: 5px;
        padding-right: 0px;
        flex-grow: 1;
        flex-shrink: 1;

        &[type=checkbox] {
            // This is apparently non-standard. I'd like to find an alternate method
            -webkit-appearance: checkbox;
        }

        &[type=number] {
            width: 2.5em;
            // With center text, no padding needed
            padding-left: 0px;
            text-align: center;
        }
        &[type=number].smallnumber {
            width: 1.5em;
        }
        &[type=text] {
            width: 6em;
            min-width: 2em;
        }
    }
    // Apparently selects don't stretch in a flexbox, so best bet is to wrap child selects in a span
    // Trouble is, that means it doesn't get the >* rule, so we add that here.
    select {
        border-radius: 0px;
        border: 1px solid $inactive-colour;
        width: 50%;
    }
    p {
        margin:0px 3px 0px 3px;
    }

    i.fas {
        padding-left: 0;
        padding-right: 0;
        font-size: small;
        color: $fa-colour;

        +.fas {
            padding-left: 2px;
        }
    }

    label.larger {
        font-size: larger;
        font-style: italic;
    }
    // Do I do a thing for divs here? when it's just displaying and isn't visible
}